Next match:
   - test against Holtz too
   - GOAL: beat Dvonner/Holtz/dDvonn consistently!
   - remove `best' as dfs() parameter

   - Note: dDvonn uses different search algorithms/evaluation functions
     depending on wheter it's playing white or black. Pit these against each
     other to find out which works best?

Note:
 - timing reports don't really seem to match up with what the CodeCup server thinks :/

Later:
 - test if current move representation is inefficient (ints instead of chars?)
 - change library functions so single moves are passed by value.
 - smarter move ordering: capture moves first, etc?
 - shuffle moves when depth >= 2 or so? (shuffling seemed to improve cut-offs)
 - make board hashing for TT more efficient
 - check hash table performance: how often do collisions occur?
   how full is the table when they happen?
 - optimize move reordering: currently I apply move reordering when depth >= 3,
   and subtract 2 from search depth compared to regular search. Maybe these
   values can be optimized/tweaked further. How to evaluate?!
 - optimize time budget for moves
 - implement MTD(f)
 - validate all code!
 - consider auto-learning for evaluation parameters?
   See: http://www.littlegolem.net/jsp/forum/topic2.jsp?forum=30&topic=19
 - test against Rororobot and Jan's Program on littlegolem.net
 - reconsider tt replacement policy (replace if depth >= tt->depth only?)

Long time:
 - improve evaluation functions for both algorithms

Test suite:
 - transposition table tests: check values for various positions with and
   without tt, and ensure their values are equal.

For final version:
  - evalate lost games (see NOTES.txt)
  - evaluation optimizations:
    - fancy-eval branch (which includes distance to Dvonns in evaluation function)
      - rebase to master, to benefit from linearized board and bugs fixed
      - try to get it to outperform mainline player
    - better setup?
       - against Tomek Czajka I get a lot of stones that are only near my own
         stones. this sucks! does it? clustering seems to work well in practice!
    - to test: does simpler setup work better in the real world because of
               time saved?
  - search optimization:
     - implement MTD(f)
     - optimize time budgeting for moves (how?)
  - implementation optimizations:
      - benchmark & optimize (do this last)

Before submission:
  benchmark against previous submission + Dvonner + player3

Maybe later:
 - check hash table performance:
     - how often do collisions occur?
     - how full is the table when they happen?
 - consider using double/cuckoo hashing for transposition table, so that all
   results can be stored? needs good benchmarking to figure out if this makes
   sense.
 - validate all code!
     - print it out, verify, add comments...
 - consider auto-learning for evaluation parameters?
   See: http://www.littlegolem.net/jsp/forum/topic2.jsp?forum=30&topic=19
   Note: it seems this is what Dvonner did!

Overall:
 - improve placement phase evaluation function
 - improve stacking phase evaluation function
 - improve move ordering heuristic:
    - to evaluate: take a random sample of positions, rank possible moves by
      value, and see which ones tend to be good?
 - optimize time budgeting for moves

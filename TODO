Next match:
   - test against Holtz too
   - GOAL: beat Dvonner consistently!

Soon:
 - figure out why move ordering works so poorly!  A (likely?) reason might be
   that the depth-limited pre-searches ruin the transposition table (fix:
   overwrite entries only if (hash != entry->hash || depth >= entry->depth)?).
   With current results it seems wiser to abandon pre-search entirely in favor
   of the killer heuristic and other cheaper/simpler ordering heuristics which
   do not interact with the transposition table (document decision in NOTES).
 - make "killer heuristic" permanent (remove #ifdefs etc.), but allow disabling
   it on the command line (like tt and mo).
   - TT seems most effective when incrementing search depth one step at a time.
     Update search-code so that it always goes one step back if tt and/or mo/kh
     are enabled.

Note:
 - timing reports don't really seem to match up with what the CodeCup server thinks :/

Later:
 - change library functions so single moves are passed by value.
 - smarter move ordering: capture moves first, etc?
 - shuffle moves when depth >= 2 or so? (shuffling seemed to improve cut-offs)
 - make board hashing for TT more efficient
 - check hash table performance: how often do collisions occur?
   how full is the table when they happen?
 - optimize move reordering: currently I apply move reordering when depth >= 3,
   and subtract 2 from search depth compared to regular search. Maybe these
   values can be optimized/tweaked further. How to evaluate?!
 - optimize time budget for moves
 - implement MTD(f)
 - validate all code!
 - consider auto-learning for evaluation parameters?
   See: http://www.littlegolem.net/jsp/forum/topic2.jsp?forum=30&topic=19
 - test against Rororobot and Jan's Program on littlegolem.net

Long time:
 - improve evaluation functions for both algorithms

Test suite:
 - transposition table tests: check values for various positions with and
   without tt, and ensure their values are equal.

Existing opponents:
  http://matztias.de/spiele/dvonner/dvonner-e.htm
  http://www.othello.nl/content/Dvonn.zip
  Holtz (open-source!)
